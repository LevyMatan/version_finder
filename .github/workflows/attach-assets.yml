name: Manual Semantic Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:

  build-and-attach-assets:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Print the Upload URL
        run: |
          echo "The upload URL is ${{ github.event.release.upload_url }}"

      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.14.0
      - name: Install Dependencies
        run: npm ci
      - name: Build Assets
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run build-mac
          else
            npm run build-linux
          fi
      - name: Archive Linux package
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            tar -czvf macos-package.tar.gz -C release-builds VersionFinder-darwin-x64
          else
            tar -czvf linux-package.tar.gz -C release-builds VersionFinder-linux-x64
          fi



      - name: Upload Linux Assets to Release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_PAT }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This is the URL for uploading assets to the GitHub release
          asset_path: linux-package.tar.gz/linux-package.tar.gz
          asset_name: linux-package.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS package to release
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_PAT }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: macos-package.tar.gz/macos-package.tar.gz
          asset_name: macos-package.tar.gz
          asset_content_type: application/gzip